{"version":3,"sources":["utils/AuthenticatedAxios.js","context/UserContext.js","utils/Auth.js","components/SignUpForm.js","components/LoginForm.js","components/LoginPage.js","components/Post.js","components/Event.js","components/PostForm.js","pages/Main.js","App.js","registerServiceWorker.js","index.js"],"names":["axios","create","headers","Authorization","localStorage","getItem","createContext","Auth","isLoggedIn","logIn","email","password","cb","post","then","response","console","log","setItem","data","token","logOut","removeItem","getToken","register","first","last","firstName","lastName","catch","err","SignUpForm","state","changeHandler","e","target","name","value","setState","submitHandler","preventDefault","context","setUser","props","history","push","onSubmit","this","className","type","onChange","Component","contextType","UserContext","withRouter","LoginForm","user","LoginPage","isRegister","changeForm","id","onClick","React","Post","msg","alt","src","photos","creatorPhoto","Event","events","title","img","description","date","start","end","creator","photo","PostForm","dateCreated","currentDate","Date","postData","savePost","returnedData","htmlFor","Mainpage","posts","getPosts","get","res","getEvents","socketIOClient","on","authenticatedAxios","socket","close","map","key","_id","event","App","Provider","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"0OAEeA,MAAMC,OAAO,CAC1BC,QAAS,CACPC,cAAeC,aAAaC,QAAQ,Y,QCFzBC,4BCwDAC,MATN,CACLC,WAVF,WAEE,QADcJ,aAAaC,QAAQ,UAUnCI,MAhDF,SAAeC,EAAOC,EAAUC,GAE9BZ,IACGa,KAAK,oBAAqB,CAAEH,MAAOA,EAAOC,SAAUA,IACpDG,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZX,aAAac,QAAQ,QAASH,EAASI,KAAKC,OAC5CR,EAAGG,EAASI,UA0ChBE,OArBF,SAAgBT,GACdR,aAAakB,WAAW,SACxBV,KAoBAW,SAjBF,WACE,OAAOnB,aAAaC,QAAQ,UAiB5BmB,SAxCF,SAAkBd,EAAOC,EAAUc,EAAOC,EAAMd,GAC9CI,QAAQC,IAAI,YACZjB,IACGa,KAAK,cAAe,CACnBH,MAAOA,EACPC,SAAUA,EACVgB,UAAWF,EACXG,SAAUF,IAEXZ,MAAK,SAASK,GACbH,QAAQC,IAAIE,MAEbU,OAAM,SAASC,GACdd,QAAQC,IAAIa,QCtBdC,E,2MAGJC,MAAQ,CACNtB,MAAO,GACPC,SAAU,GACVgB,UAAW,GACXC,SAAU,I,EAGZK,cAAgB,SAAAC,GAAM,IAAD,EACKA,EAAEC,OAAlBC,EADW,EACXA,KAAMC,EADK,EACLA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,cAAgB,SAAAL,GACdA,EAAEM,iBADiB,MAE8B,EAAKR,MAA9CtB,EAFW,EAEXA,MAAOC,EAFI,EAEJA,SAAUgB,EAFN,EAEMA,UAAWC,EAFjB,EAEiBA,SAChClB,GAASC,GAAYgB,GAAaC,GACpCrB,EAAKiB,SAASd,EAAOC,EAAUgB,EAAWC,GAAU,SAAAb,GAClD,EAAK0B,QAAQC,QAAQ3B,GACrB,EAAK4B,MAAMC,QAAQC,KAAK,S,wEAM5B,OACE,0BAAMC,SAAUC,KAAKR,eACnB,yBAAKS,UAAU,SACb,0CACA,2BACEC,KAAK,OACLb,KAAK,YACLC,MAAOU,KAAKf,MAAMP,MAClByB,SAAUH,KAAKd,iBAGnB,yBAAKe,UAAU,SACb,yCACA,2BACEC,KAAK,OACLb,KAAK,WACLC,MAAOU,KAAKf,MAAMN,KAClBwB,SAAUH,KAAKd,iBAGnB,yBAAKe,UAAU,SACb,8DACA,2BACEC,KAAK,WACLb,KAAK,WACLC,MAAOU,KAAKf,MAAMrB,SAClBuC,SAAUH,KAAKd,iBAGnB,yBAAKe,UAAU,SACb,qCACA,2BACEC,KAAK,OACLb,KAAK,QACLC,MAAOU,KAAKf,MAAMtB,MAClBwC,SAAUH,KAAKd,iBAGnB,4BAAQe,UAAU,6BAA6BC,KAAK,UAApD,gB,GAjEiBE,aAAnBpB,EACGqB,YAAcC,EAwERC,kBAAWvB,GCzEpBwB,E,2MAGJvB,MAAQ,CACNtB,MAAO,GACPC,SAAU,GACV6C,KAAM,I,EAGRd,QAAU,SAAAc,GACR,EAAKlB,SAAS,CAAEkB,U,EAGlBvB,cAAgB,SAAAC,GAAM,IAAD,EACKA,EAAEC,OAAlBC,EADW,EACXA,KAAMC,EADK,EACLA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,cAAgB,SAAAL,GACdA,EAAEM,iBADiB,MAES,EAAKR,MAAzBtB,EAFW,EAEXA,MAAOC,EAFI,EAEJA,SACXD,GAASC,GACXJ,EAAKE,MAAMC,EAAOC,GAAU,SAAAI,GAC1B,EAAK0B,QAAQC,QAAQ3B,GACrB,EAAK4B,MAAMC,QAAQC,KAAK,KACxB7B,QAAQC,IAAI,EAAKe,MAAMwB,U,wEAM3B,OACE,oCACE,0BAAMV,SAAUC,KAAKR,eACnB,yBAAKS,UAAU,SACb,qCACA,2BACEC,KAAK,OACLb,KAAK,QACLC,MAAOU,KAAKf,MAAMtB,MAClBwC,SAAUH,KAAKd,iBAGnB,yBAAKe,UAAU,SACb,wCACA,2BACEC,KAAK,WACLb,KAAK,WACLC,MAAOU,KAAKf,MAAMrB,SAClBuC,SAAUH,KAAKd,iBAGnB,4BAAQe,UAAU,6BAA6BC,KAAK,UAApD,e,GApDcE,aAAlBI,EACGH,YAAcC,EA4DRC,kBAAWC,GC9BXE,E,2MA/BbzB,MAAQ,CACN0B,YAAY,G,EAEdC,WAAa,WACX,EAAKrB,SAAS,CAAEoB,YAAa,EAAK1B,MAAM0B,c,wEAEhC,IACAA,EAAeX,KAAKf,MAApB0B,WACR,OACE,yBAAKE,GAAG,QACN,6BACE,wBAAIA,GAAG,aAAP,aAEF,wBAAIA,GAAG,SAAP,uCACA,yBAAKZ,UAAU,YAAYY,GAAG,oBAC5B,yBAAKZ,UAAU,oCACb,yBAAKA,UAAU,wBACZU,EAAa,kBAAC,EAAD,MAAiB,kBAAC,EAAD,MAC/B,uBAAGV,UAAU,GAAGY,GAAG,QAAQC,QAASd,KAAKY,YACtCD,EACG,2BACA,kC,GAtBII,IAAMX,W,QC0BfY,E,iLAXX,OACE,yBAAKf,UAAU,aACb,2BAAID,KAAKJ,MAAMqB,KACf,yBAAKC,IAAI,GAAGjB,UAAU,aAAakB,IAAKnB,KAAKJ,MAAMwB,SACnD,yBAAKnB,UAAU,YAAYD,KAAKJ,MAAMhB,WACtC,yBAAKsC,IAAI,GAAGjB,UAAU,YAAYkB,IAAKnB,KAAKJ,MAAMyB,oB,GAtBvCjB,aCgCJkB,E,2MA/BbrC,MAAQ,CACNsC,OAAQ,I,wEAeR,OACE,yBAAKtB,UAAU,cACb,4BAAKD,KAAKJ,MAAM4B,OAChB,yBAAKvB,UAAU,cAAcD,KAAKJ,MAAM6B,KACxC,uBAAGxB,UAAU,eAAeD,KAAKJ,MAAM8B,aACvC,0BAAMzB,UAAU,SACbD,KAAKJ,MAAM+B,KAAKC,MADnB,MAC6B5B,KAAKJ,MAAM+B,KAAKE,KAE7C,yBAAK5B,UAAU,YAAYD,KAAKJ,MAAMkC,QAAQlD,WAC9C,yBAAKqB,UAAU,aAAaD,KAAKJ,MAAMkC,QAAQC,Y,GA1BnC3B,a,iBCyFL4B,E,2MAlFb/C,MAAQ,CACNgC,IAAK,GACLa,QAAS,2BACTG,YAAa,GACbb,OAAQ,I,EAOVlC,cAAgB,SAAAC,GAAM,IAAD,EACKA,EAAEC,OAAlBC,EADW,EACXA,KAAMC,EADK,EACLA,MACd,EAAKC,SAAL,eACGF,EAAOC,K,EAKZE,cAAgB,SAAAL,GACdA,EAAEM,iBAEF,IAAIyC,EAAc,IAAIC,KAClBC,EAAW,CACbnB,IAAK,EAAKhC,MAAMgC,IAChBa,QAAS,EAAK7C,MAAM6C,QACpBG,YAAaC,GAEf,EAAKG,SAASD,I,EAGhBC,SAAW,SAAAD,GACTnF,IACGa,KAAK,YAAasE,GAClBrE,MAAK,SAAAuE,OAMLxD,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,O,qHAI5B,OACE,yBAAK8B,GAAG,YACN,0BAAMZ,UAAU,QAAQF,SAAUC,KAAKR,eACrC,yBAAKS,UAAU,SACb,2BAAOA,UAAU,QAAQsC,QAAQ,OAAjC,WAGA,2BACErC,KAAK,OACLb,KAAK,MACLC,MAAOU,KAAKf,MAAMgC,IAClBd,SAAUH,KAAKd,iBAGnB,yBAAKe,UAAU,SACb,2BAAOA,UAAU,QAAQsC,QAAQ,SAAjC,SAGA,yBAAKtC,UAAU,WACb,0BAAMY,GAAG,eAAT,KACA,2BACEZ,UAAU,QACVZ,KAAK,QACLa,KAAK,OACLZ,MAAOU,KAAKf,MAAMmC,OAClBjB,SAAUH,KAAKd,kBAIrB,4BAAQe,UAAU,6BAA6BC,KAAK,UAApD,e,GA3EaE,aC6FRoC,E,2MAzFbvD,MAAQ,CACNwD,MAAO,GACPlB,OAAQ,GACRd,KAAM,I,EAGRd,QAAU,SAAAc,GACR,EAAKlB,SAAS,CAAEkB,U,EAuClBiC,SAAW,WACTzF,IACG0F,IAAI,cACJ5E,MAAK,SAAA6E,GACJ3E,QAAQC,IAAI0E,GACZ,EAAKrD,SAAS,CAAEkD,MAAOG,EAAIxE,UAE5BU,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,O,EAG9B8D,UAAY,WACV5F,IACG0F,IAAI,eACJ5E,MAAK,SAAA6E,GAAG,OAAI,EAAKrD,SAAS,CAAEgC,OAAQqB,EAAIxE,UACxCU,OAAM,SAAAC,GAAG,OAAId,QAAQC,IAAIa,O,mFAlDT,IAAD,OAClBiB,KAAK0C,WACL1C,KAAK6C,YACUC,IAAe,yBAGvBC,GAAG,YAAY,SAAAjF,GACpBG,QAAQC,IAAIJ,GACZ,EAAKyB,SAAS,CACZkD,MAAM,CAAE3E,GAAH,mBAAY,EAAKmB,MAAMwD,aAIlBpF,aAAaC,QAAQ,UAEjC0F,EAAmBL,IAAI,WAAW5E,MAAK,SAAAC,GACrCC,QAAQC,IAAIF,EAASI,MACrB,EAAKuB,QAAQ3B,EAASI,MACtBH,QAAQC,IAAI,EAAKe,MAAMwB,W,6CAe3BT,KAAKiD,OAAOC,U,+BAqBZ,OACE,yBAAKjD,UAAU,kBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACZD,KAAKf,MAAMwD,MAAMU,KAAI,SAAArF,GAAI,OACxB,kBAAC,EAAD,CACEsF,IAAKtF,EAAKuF,IACVpC,IAAKnD,EAAKmD,IACVrC,UAAWd,EAAKgE,QAAQlD,UACxByC,aAAcvD,EAAKgE,QAAQC,YAIjC,yBAAK9B,UAAU,iBACZD,KAAKf,MAAMsC,OAAO4B,KAAI,SAAAG,GAAK,OAC1B,kBAAC,EAAD,CAAOF,IAAKE,EAAMD,WAIxB,kBAAC,EAAD,W,GApFetC,IAAMX,WCqCdmD,E,2MAtCbtE,MAAQ,CACNwB,KAAM,M,EAGRd,QAAU,SAAAc,GACR,EAAKlB,SAAS,CAAEkB,U,mFAGG,IAAD,OACJpD,aAAaC,QAAQ,UAEjC0F,EACGL,IAAI,WACJ5E,MAAK,SAAAC,GAAQ,OAAI,EAAK2B,QAAQ3B,EAASI,W,+BAIpC,IACAqC,EAAST,KAAKf,MAAdwB,KACFd,EAAUK,KAAKL,QACrB,OACE,kBAAC,IAAD,KACE,6BACE,kBAACW,EAAYkD,SAAb,CACElE,MAAO,CACLmB,KAAMA,EACNd,QAASA,IAGX,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,YAAYC,UAAWnB,W,GA/BnCpC,aCEZwD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACP5F,SAAS0F,GACTpG,MAAK,SAAAuG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvF,QACfmF,UAAUC,cAAcM,WAK1B1G,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBY,OAAM,SAAA8F,GACL3G,QAAQ2G,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIC,GAAwBpB,OAAOC,UAC3CoB,SAAWrB,OAAOC,SAASoB,OAIvC,OAGFrB,OAAOsB,iBAAiB,QAAQ,WAC9B,IAAMjB,EAAK,UAAMe,GAAN,sBAENtB,EAwCX,SAAiCO,GAE/BkB,MAAMlB,GACHpG,MAAK,SAAAC,GAGkB,MAApBA,EAASsH,SACuD,IAAhEtH,EAASb,QAAQwF,IAAI,gBAAgB4C,QAAQ,cAG7CnB,UAAUC,cAAcmB,MAAMzH,MAAK,SAAAuG,GACjCA,EAAamB,aAAa1H,MAAK,WAC7B+F,OAAOC,SAAS2B,eAKpBxB,EAAgBC,MAGnBrF,OAAM,WACLb,QAAQC,IACN,oEAzDAyH,CAAwBxB,GAHxBD,EAAgBC,OC7BxByB,I","file":"static/js/main.e290b93f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"token\")\n  }\n});\n","import { createContext } from \"react\";\n\nexport default createContext();\n","import axios from \"axios\";\n\nfunction Auth() {\n  function logIn(email, password, cb) {\n    //code goes here\n    axios\n      .post(\"/api/authenticate\", { email: email, password: password })\n      .then(response => {\n        console.log(response);\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response.data);\n      });\n  }\n\n  function register(email, password, first, last, cb) {\n    console.log(\"register\");\n    axios\n      .post(\"/api/signup\", {\n        email: email,\n        password: password,\n        firstName: first,\n        lastName: last\n      })\n      .then(function(data) {\n        console.log(data);\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken,\n    register\n  };\n}\n\nexport default Auth();\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nclass SignUpForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { email, password, firstName, lastName } = this.state;\n    if (email && password && firstName && lastName) {\n      Auth.register(email, password, firstName, lastName, response => {\n        this.context.setUser(response);\n        this.props.history.push(\"/\");\n      });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.submitHandler}>\n        <div className=\"field\">\n          <h1>First Name</h1>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={this.state.first}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <div className=\"field\">\n          <h1>Last Name</h1>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={this.state.last}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <div className=\"field\">\n          <h1>Password (min of 8 characters)</h1>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <div className=\"field\">\n          <h1>Email</h1>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <button className=\"button is-primary is-small\" type=\"submit\">\n          Sign up\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SignUpForm);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nclass LoginForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n    user: \"\"\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if (email && password) {\n      Auth.logIn(email, password, response => {\n        this.context.setUser(response);\n        this.props.history.push(\"/\");\n        console.log(this.state.user);\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <h1>Email</h1>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"field\">\n            <h1>Password</h1>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <button className=\"button is-primary is-small\" type=\"submit\">\n            Login\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React from \"react\";\nimport SignUpForm from \"./SignUpForm\";\nimport LoginForm from \"./LoginForm\";\n\nclass LoginPage extends React.Component {\n  state = {\n    isRegister: false\n  };\n  changeForm = () => {\n    this.setState({ isRegister: !this.state.isRegister });\n  };\n  render() {\n    const { isRegister } = this.state;\n    return (\n      <div id=\"wrap\">\n        <nav>\n          <h1 id=\"main-name\">UnKnowed</h1>\n        </nav>\n        <h5 id=\"quote\">Putting community back in community</h5>\n        <div className=\"container\" id=\"signup-container\">\n          <div className=\"columns is-centered is-vcentered\">\n            <div className=\"column is-narrow box\">\n              {isRegister ? <SignUpForm /> : <LoginForm />}\n              <a className=\"\" id=\"login\" onClick={this.changeForm}>\n                {isRegister\n                  ? \"Already have an account?\"\n                  : \"Sign up for an account\"}\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\n\nclass Post extends Component {\n  /*  state = {\n    posts: []\n  };\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  getPosts = () => {\n    axios\n      .get(\"/api/posts\")\n      .then(res => this.setState({ posts: res.data }))\n      .cach(err => console.log(err));\n  }; */\n\n  render() {\n    return (\n      <div className=\"posts box\">\n        <p>{this.props.msg}</p>\n        <img alt=\"\" className=\"postPhotos\" src={this.props.photos} />\n        <div className=\"username\">{this.props.firstName}</div>\n        <img alt=\"\" className=\"userphoto\" src={this.props.creatorPhoto} />\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    events: []\n  };\n\n  //   componentDidMount() {\n  //     this.getPosts();\n  //   }\n\n  //   getPosts = () => {\n  //     axios\n  //       .get(\"/api/events\")\n  //       .then(res => this.setState({ events: res.data }))\n  //       .cach(err => console.log(err));\n  //   };\n\n  render() {\n    return (\n      <div className=\"events box\">\n        <h2>{this.props.title}</h2>\n        <div className=\"postPhotos\">{this.props.img}</div>\n        <p className=\"description\">{this.props.description}</p>\n        <span className=\"dates\">\n          {this.props.date.start} - {this.props.date.end}\n        </span>\n        <div className=\"username\">{this.props.creator.firstName}</div>\n        <div className=\"userphoto\">{this.props.creator.photo}</div>\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\nimport axios from \"axios\";\nimport socketIOClient from \"socket.io-client\";\n\nclass PostForm extends Component {\n  //settting compoent forms initial structure\n  state = {\n    msg: \"\",\n    creator: \"5e13e9c75293fcd9f353d106\",\n    dateCreated: \"\",\n    photos: \"\"\n  };\n\n  componentDidMount() {}\n  // socket = socketIOClient();\n\n  //this gets the value and name of the inputs that triggered the change\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  //want to prevent the default of form submit which is to just refresh the page\n  submitHandler = e => {\n    e.preventDefault();\n    // console.log(Auth.getToken());\n    let currentDate = new Date();\n    let postData = {\n      msg: this.state.msg,\n      creator: this.state.creator,\n      dateCreated: currentDate\n    };\n    this.savePost(postData);\n  };\n\n  savePost = postData => {\n    axios\n      .post(\"/api/post\", postData)\n      .then(returnedData => {\n        // console.log(returnedData);\n        // this.socket.emit(\"new post\", {\n        //   returnedData\n        // });\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div id=\"postform\">\n        <form className=\"event\" onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"msg\">\n              Message\n            </label>\n            <input\n              type=\"text\"\n              name=\"msg\"\n              value={this.state.msg}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"photo\">\n              Photo\n            </label>\n            <div className=\"control\">\n              <span id=\"imageRemove\">X</span>\n              <input\n                className=\"input\"\n                name=\"photo\"\n                type=\"file\"\n                value={this.state.photos}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <button className=\"button is-primary is-small\" type=\"submit\">\n            Post!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Post from \"../components/Post\";\nimport Event from \"../components/Event\";\nimport Postform from \"../components/PostForm\";\nimport authenticatedAxios from \"../utils/AuthenticatedAxios\";\n\n// import Nav from \"../components/Nav\";\nimport socketIOClient from \"socket.io-client\";\n\nclass Mainpage extends React.Component {\n  state = {\n    posts: [],\n    events: [],\n    user: \"\"\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  componentDidMount() {\n    this.getPosts();\n    this.getEvents();\n    const socket = socketIOClient(\"http://127.0.0.1:3001\");\n    // socket.on(\"new post\", data => console.log(data));\n\n    socket.on(\"new post\", post => {\n      console.log(post);\n      this.setState({\n        posts: [post, ...this.state.posts]\n      });\n    });\n\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios.get(\"/api/me\").then(response => {\n        console.log(response.data);\n        this.setUser(response.data);\n        console.log(this.state.user);\n      });\n    }\n\n    // this.socket.on(\"new event\", event => {\n    //   this.setState({\n    //     events: [event, ...this.state.events]\n    //   });\n    // });\n\n    //\n    // this.socket.on(\"new test\", console.log);\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  getPosts = () => {\n    axios\n      .get(\"/api/posts\")\n      .then(res => {\n        console.log(res);\n        this.setState({ posts: res.data });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getEvents = () => {\n    axios\n      .get(\"/api/events\")\n      .then(res => this.setState({ events: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"container main\">\n        <div className=\"columns\">\n          <div className=\"column posts\">\n            {this.state.posts.map(post => (\n              <Post\n                key={post._id}\n                msg={post.msg}\n                firstName={post.creator.firstName}\n                creatorPhoto={post.creator.photo}\n              />\n            ))}\n          </div>\n          <div className=\"column events\">\n            {this.state.events.map(event => (\n              <Event key={event._id} />\n            ))}\n          </div>\n        </div>\n        <Postform />\n      </div>\n    );\n  }\n}\n\nexport default Mainpage;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport authenticatedAxios from \"./utils/AuthenticatedAxios\";\nimport LoginPage from \"./components/LoginPage\";\nimport UserContext from \"./context/UserContext\";\nimport Mainpage from \"./pages/Main\";\n\nclass App extends Component {\n  state = {\n    user: null\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios\n        .get(\"/api/me\")\n        .then(response => this.setUser(response.data));\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser;\n    return (\n      <Router>\n        <div>\n          <UserContext.Provider\n            value={{\n              user: user,\n              setUser: setUser\n            }}\n          >\n            <Route exact path=\"/\" component={LoginPage} />\n            <Route exact path=\"/mainpage\" component={Mainpage} />\n          </UserContext.Provider>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}