{"version":3,"sources":["utils/Auth.js","components/ProtectedRoute.js","utils/AuthenticatedAxios.js","context/UserContext.js","components/SignUpForm.js","components/LoginForm.js","pages/LoginPage.js","components/UserDisplay/UserDisplay.js","components/PostReply.js","components/CommentDisplay/CommentDisplay.js","components/CommentingButtons/CommentingButtons.js","components/Post.js","components/Event.js","components/PostForm.js","components/Map.js","components/EventForm.js","components/Nav/Nav.js","pages/Main.js","pages/Viewer.js","App.js","registerServiceWorker.js","index.js"],"names":["Auth","logIn","email","password","cb","axios","post","then","response","console","log","localStorage","setItem","data","token","window","location","isLoggedIn","getItem","logOut","removeItem","getToken","register","userData","get","catch","err","event","title","description","address","lat","lon","alert","ProtectedRoute","Component","component","rest","render","props","to","create","headers","Authorization","createContext","SignUpForm","state","firstName","lastName","photo","changeHandler","e","target","name","value","setState","fileChangeHandler","file","files","submitHandler","preventDefault","FormData","document","querySelector","context","setUser","history","push","id","onSubmit","this","className","type","first","onChange","last","htmlFor","contextType","UserContext","withRouter","LoginForm","user","LoginPage","isRegister","changeForm","onClick","React","UserDisplay","style","backgroundImage","creatorPhoto","PostForm","msg","creator","userState","dateCreated","photos","parrentComment","currentDate","Date","formPostData","set","append","eventShow","saveEvent","savePost","postData","method","url","closeForm","refreshComments","postId","placeholder","rows","CommentDisplay","componentDidMount","comments","_id","data-id","alt","src","CommentingButtons","loggedIn","setTimeout","replyCount","marginRight","toggleReply","dataId","toggleComments","Post","readComments","replies","getComments","params","length","PostReply","map","comment","key","Event","eventData","img","date","data-attr","start","MapContainer","displayMarkers","events","index","position","lng","google","zoom","initialCenter","GoogleApiWrapper","apiKey","process","MAP_API","EventForm","handleDateChange","results","geometry","error","data2","selected","Nav","role","aria-label","href","aria-expanded","toggleNavbar","aria-hidden","togglePostEventViews","togglePostForm","postFormShow","toggleEventForm","eventFormShow","logout","Mainpage","posts","burgerActive","getPosts","res","getEvents","classList","remove","authenticatedAxios","socket","socketIOClient","on","close","Viewer","App","Provider","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5943ca1d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction Auth() {\n  function logIn(email, password, cb) {\n    //code goes here\n    axios\n      .post(\"/api/authenticate\", { email: email, password: password })\n      .then(response => {\n        console.log(response);\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response.data);\n        // alert(\"Welcome back! \" + response.data.email);\n        window.location = \"/mainpage\";\n      });\n  }\n\n  function register(userData, cb) {\n    console.log(\"register\");\n    let email = userData.get(\"email\");\n    let password = userData.get(\"password\");\n    // console.log(\"login\", email, password);\n\n    axios\n      .post(\"/api/signup\", userData)\n      .then(function(data) {\n        console.log(\"userData\", userData);\n        logIn(email, password, cb);\n        console.log(data);\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  }\n\n  function event(title, description, address, lat, lon, cb) {\n    console.log(\"Event Created\");\n    axios\n      .post(\"/api/EventForm\", {\n        title: title,\n        description: description,\n        address: address,\n        lat: lat,\n        lon: lon\n      })\n      .then(function(data) {\n        console.log(data);\n        alert(\"Success!\");\n        window.location = \"/mainpage\";\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken,\n    register,\n    event\n  };\n}\n\nexport default Auth();\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.isLoggedIn() ? <Component {...props} /> : <Redirect to=\"/\" />\n    }\n  />\n);\n\nexport default ProtectedRoute;\n","import axios from \"axios\";\n\nexport default axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"token\")\n  }\n});\n","import { createContext } from \"react\";\n\nexport default createContext();\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nclass SignUpForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    photo: \"\"\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      photo: file\n    });\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    const { email, password, firstName, lastName } = this.state;\n\n    const userData = new FormData(document.querySelector(\"#newUserForm\"));\n\n    if (email && password && firstName && lastName) {\n      Auth.register(userData, response => {\n        this.context.setUser(response);\n        this.props.history.push(\"/\");\n      });\n\n      // Auth.register(email, password, firstName, lastName, photo, response => {\n      //   this.context.setUser(response);\n      //   this.props.history.push(\"/\");\n      // });\n    }\n  };\n\n  render() {\n    return (\n      <form id=\"newUserForm\" onSubmit={this.submitHandler}>\n        <div className=\"field\">\n          <h1>First Name</h1>\n          <input\n            type=\"text\"\n            name=\"firstName\"\n            value={this.state.first}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <div className=\"field\">\n          <h1>Last Name</h1>\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            value={this.state.last}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <div className=\"field\">\n          <h1>Password (min of 8 characters)</h1>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.changeHandler}\n          />\n        </div>\n        <div className=\"field\">\n          <h1>Email</h1>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.changeHandler}\n          />\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"photo\">\n            Photo\n          </label>\n          <div className=\"control\">\n            <span id=\"imageRemove\">X</span>\n            <input\n              className=\"input\"\n              name=\"photo\"\n              type=\"file\"\n              // value={this.state.photo}\n              onChange={this.fileChangeHandler}\n            />\n          </div>\n        </div>\n\n        <button className=\"button is-primary is-small\" type=\"submit\">\n          Sign up\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SignUpForm);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nclass LoginForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n    user: \"\"\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { email, password } = this.state;\n    if (email && password) {\n      Auth.logIn(email, password, response => {\n        this.context.setUser(response);\n        this.props.history.push(\"/\");\n        console.log(this.state.user);\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <h1>Email</h1>\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"field\">\n            <h1>Password</h1>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <button className=\"button is-primary is-small\" type=\"submit\">\n            Login\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React from \"react\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport LoginForm from \"../components/LoginForm\";\n\nclass LoginPage extends React.Component {\n  state = {\n    isRegister: false\n  };\n  changeForm = () => {\n    this.setState({ isRegister: !this.state.isRegister });\n  };\n  render() {\n    const { isRegister } = this.state;\n    return (\n      <div id=\"wrap\">\n        <nav>\n          <h1 id=\"main-name\">UnKnowed</h1>\n        </nav>\n        <h5 id=\"quote\">Putting community back in community</h5>\n        <div className=\"container\" id=\"signup-container\">\n          <div className=\"columns is-centered is-vcentered is-mobile\">\n            <div className=\"column is-narrow box\">\n              {isRegister ? <SignUpForm /> : <LoginForm />}\n              <a className=\"\" id=\"login\" onClick={this.changeForm}>\n                {isRegister\n                  ? \"Already have an account?\"\n                  : \"Sign up for an account\"}\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport \"./userDisplay.css\";\n\nclass UserDisplay extends Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"userphoto\"\n          style={{ backgroundImage: `url(${this.props.creatorPhoto})` }}\n        ></div>\n        <div className=\"username\">{this.props.firstName}</div>\n      </>\n    );\n  }\n}\n\nexport default UserDisplay;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PostForm extends Component {\n  //settting compoent forms initial structure\n  state = {\n    msg: \"\",\n    creator: this.props.userState.id,\n    dateCreated: \"\",\n    photos: \"\",\n    parrentComment: \"\"\n  };\n\n  componentDidMount() {\n    this.setState({\n      parrentComment: this.props.postId\n    });\n  }\n\n  //this gets the value and name of the inputs that triggered the change\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      photos: file\n    });\n  };\n\n  //want to prevent the default of form submit which is to just refresh the page\n  submitHandler = e => {\n    e.preventDefault();\n    // console.log(Auth.getToken());\n    let currentDate = new Date();\n\n    let formPostData = new FormData();\n    formPostData.set(\"creator\", this.state.creator);\n    formPostData.append(\"photos\", this.state.photos);\n    formPostData.append(\"msg\", this.state.msg);\n    formPostData.append(\"dateCreated\", currentDate);\n    formPostData.append(\"commentId\", this.state.parrentComment);\n\n    // console.log(\"form data for axios\");\n    // for (var [key, value] of formPostData.entries()) {\n    //   console.log(key, value);\n    // }\n    this.props.eventShow\n      ? this.saveEvent(formPostData)\n      : this.savePost(formPostData);\n  };\n\n  saveEvent = postData => {\n    console.log(\"save event reply\");\n\n    axios({\n      method: \"post\",\n      url: \"/api/replyEventComment\",\n      data: postData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(() => {\n        this.props.closeForm();\n      })\n      .catch(err => console.log(err));\n  };\n\n  savePost = postData => {\n    console.log(\"save post reply\");\n\n    axios({\n      method: \"post\",\n      url: \"/api/replyComment\",\n      data: postData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(() => {\n        this.props.refreshComments();\n        this.props.closeForm();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div id=\"postform\">\n        <button onClick={this.props.closeForm}>X</button>\n        <form className=\"event\" onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"msg\">\n              Message\n            </label>\n            <textarea\n              placeholder=\"message to community\"\n              type=\"text\"\n              rows=\"3\"\n              className=\"textarea\"\n              name=\"msg\"\n              value={this.state.msg}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"photo\">\n              Photo\n            </label>\n            <div className=\"control\">\n              {/* <span id=\"imageRemove\">X</span> */}\n              <input\n                className=\"input\"\n                name=\"photo\"\n                type=\"file\"\n                // value={this.state.photos}\n                onChange={this.fileChangeHandler}\n              />\n            </div>\n          </div>\n          <button className=\"button is-primary is-small\" type=\"submit\">\n            Post!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React, { Component } from \"react\";\nimport UserDisplay from \"../UserDisplay/UserDisplay\";\nimport \"./commentDisplay.css\";\nclass CommentDisplay extends Component {\n  componentDidMount = () => {\n    // setTimeout(() => console.log(\"display\", this.props.comments), 500);\n  };\n\n  render() {\n    const { _id, creator, photos, msg } = this.props.comments;\n    return (\n      <div className=\"post comments box clearfix\" data-id={_id}>\n        <UserDisplay\n          firstName={creator.firstName}\n          creatorPhoto={creator.photo}\n        />\n        {photos ? <img alt=\"\" className=\"postPhotos\" src={photos} /> : null}\n        <p>{msg}</p>\n      </div>\n    );\n  }\n}\nexport default CommentDisplay;\n","import React, { Component } from \"react\";\nimport Auth from \"../../utils/Auth\";\nimport \"./CommentingButtons.scss\";\nclass CommentingButtons extends Component {\n  state = {\n    loggedIn: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      loggedIn: Auth.isLoggedIn()\n    });\n    setTimeout(\n      () =>\n        this.setState({\n          replyCount: this.props.replyCount\n        }),\n      100\n    );\n    // setTimeout(() => console.log(\"login State\", this.state.loggedIn), 500);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.loggedIn ? (\n          <div className=\"commentingButtons\">\n            <button\n              className=\"button is-smaller\"\n              style={{ marginRight: \".5rem\" }}\n              onClick={this.props.toggleReply}\n            >\n              Reply\n            </button>\n            <button\n              className=\"button is-smaller\"\n              data-id={this.props.dataId}\n              onClick={this.props.toggleComments}\n            >\n              Comments\n              <div className=\"commentCount\">\n                <span> {this.props.replyCount} </span>\n              </div>\n            </button>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default CommentingButtons;\n","import React, { Component } from \"react\";\nimport UserDisplay from \"./UserDisplay/UserDisplay\";\nimport axios from \"axios\";\nimport PostReply from \"./PostReply\";\nimport CommentDisplay from \"./CommentDisplay/CommentDisplay\";\nimport CommentingButtons from \"./CommentingButtons/CommentingButtons\";\nimport socketIOClient from \"socket.io-client\";\n\nclass Post extends Component {\n  state = {\n    readComments: false,\n    comments: [],\n    toggleReply: false,\n    user: \"\",\n    replyCount: \"\"\n  };\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      this.setState({\n        user: this.props.userState,\n        comments: this.props.postData.replies,\n        replyCount: this.props.replyCount\n      });\n    }, 50);\n  };\n\n  getComments = () => {\n    // let id = this.getAttribute(\"data-id\");\n    // setTimeout(() => console.log(\"id\", this.props._id), 200);\n\n    axios\n      .get(\"/api/getComments\", { params: { _id: this.props.postData._id } })\n      .then(comments => {\n        console.log(\"comment.data\", comments.data);\n        this.setState({\n          comments: comments.data,\n          replyCount: comments.data.length\n        });\n        // console.log(\"comment data\", this.state.comments);\n      });\n  };\n\n  toggleComments = () => {\n    this.setState({ readComments: !this.state.readComments });\n    this.state.readComments\n      ? (this.setState.comments = [])\n      : this.getComments();\n  };\n\n  toggleReply = () => {\n    this.setState({ toggleReply: !this.state.toggleReply });\n  };\n\n  refreshComments = () => {\n    this.getComments();\n  };\n\n  render() {\n    return (\n      <div className=\"post box clearfix\" data-id={this.props.postData._id}>\n        <div>\n          <div className=\"clearfix\">\n            <div\n              className={\n                !this.props.postData.photos[0] == \"\" ? \"clearfix\" : null\n              }\n            >\n              <UserDisplay\n                firstName={this.props.postData.creator.firstName}\n                creatorPhoto={this.props.postData.creator.photo}\n              />\n              {!this.props.postData.photos[0] == \"\" ? (\n                <div className=\"postPhotos\">\n                  <img alt=\"\" src={this.props.postData.photos} />\n                </div>\n              ) : null}\n            </div>\n            <p>{this.props.postData.msg}</p>\n          </div>\n          <CommentingButtons\n            dataId={this.props.postData._id}\n            toggleComments={this.toggleComments}\n            toggleReply={this.toggleReply}\n            replyCount={this.state.replyCount}\n          />\n        </div>\n        {this.state.toggleReply ? (\n          <PostReply\n            userState={this.state.user}\n            postId={this.props.postData._id}\n            closeForm={this.toggleReply}\n            refreshComments={this.refreshComments}\n          />\n        ) : null}\n        {this.state.readComments\n          ? this.state.comments.map(comment => (\n              <CommentDisplay key={comment.dateCreated} comments={comment} />\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport UserDisplay from \"./UserDisplay/UserDisplay\";\nimport axios from \"axios\";\nimport PostReply from \"./PostReply\";\nimport CommentDisplay from \"./CommentDisplay/CommentDisplay\";\nimport CommentingButtons from \"./CommentingButtons/CommentingButtons\";\n\nclass Event extends Component {\n  state = {\n    readComments: false,\n    comments: [],\n    toggleReply: false,\n    user: \"\",\n    replyCount: 0\n  };\n  componentDidMount() {\n    // console.log(\"eventUser\", this.props.eventData);\n    this.setState({ user: this.props.userState });\n    setTimeout(\n      () =>\n        this.setState({\n          comments: this.props.eventData.replies,\n          replyCount: this.props.replyCount\n        }),\n      100\n    );\n    // setTimeout(() => console.log(\"props.eventData\", this.props.eventData), 500);\n  }\n\n  getComments = () => {\n    // let id = this.getAttribute(\"data-id\");\n    // setTimeout(() => console.log(\"id\", this.props._id), 200);\n\n    axios\n      .get(\"/api/getEventComments\", {\n        params: { _id: this.props.eventData._id }\n      })\n      .then(comments => {\n        // console.log(\"comment\", comments.data);\n        this.setState({ comments: comments.data });\n        // console.log(this.state.comments);\n      });\n  };\n\n  refreshComments = () => {\n    this.getComments();\n  };\n\n  toggleComments = () => {\n    this.setState({ readComments: !this.state.readComments });\n    this.state.readComments\n      ? (this.setState.comments = [])\n      : this.getComments();\n  };\n\n  toggleReply = () => {\n    this.setState({ toggleReply: !this.state.toggleReply });\n  };\n\n  render() {\n    const {\n      title,\n      img,\n      description,\n      date,\n      creator,\n      _id\n    } = this.props.eventData;\n    return (\n      <div className=\"event box clearfix\" data-attr={_id}>\n        <div>\n          <h2>{title}</h2>\n          <UserDisplay\n            firstName={creator.firstName}\n            creatorPhoto={creator.photo}\n          />\n          {img ? (\n            <div className=\"postPhotos\">\n              <img src={img} alt=\"\" />\n            </div>\n          ) : null}\n          <p className={!img == \"\" ? \"clearRight description\" : \"description\"}>\n            {description}\n          </p>\n          <span className=\"dates\">{date.start}</span>\n          <CommentingButtons\n            dataId={_id}\n            toggleComments={this.toggleComments}\n            toggleReply={this.toggleReply}\n            replyCount={this.state.replyCount}\n          />\n        </div>\n        {this.state.toggleReply ? (\n          <PostReply\n            userState={this.state.user}\n            postId={_id}\n            closeForm={this.toggleReply}\n            eventShow={this.props.eventShow}\n            refreshComments={this.refreshComments}\n          />\n        ) : null}\n        {this.state.readComments\n          ? this.state.comments.map(comment => (\n              <CommentDisplay key={comment.dateCreated} comments={comment} />\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PostForm extends Component {\n  //settting compoent forms initial structure\n  state = {\n    msg: \"\",\n    creator: this.props.userState.id,\n    dateCreated: \"\",\n    photos: \"\"\n  };\n\n  componentDidMount() {\n    console.log(\"post form user\", this.props.userState);\n  }\n  // socket = socketIOClient();\n\n  //this gets the value and name of the inputs that triggered the change\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      photos: file\n    });\n  };\n\n  //want to prevent the default of form submit which is to just refresh the page\n  submitHandler = e => {\n    e.preventDefault();\n    // console.log(Auth.getToken());\n    let currentDate = new Date();\n\n    let formPostData = new FormData();\n    formPostData.set(\"creator\", this.state.creator);\n    formPostData.append(\"photos\", this.state.photos);\n    formPostData.append(\"msg\", this.state.msg);\n    formPostData.append(\"dateCreated\", currentDate);\n\n    // console.log(\"form data for axios\");\n    // for (var [key, value] of formPostData.entries()) {\n    //   console.log(key, value);\n    // }\n\n    this.savePost(formPostData);\n  };\n\n  savePost = postData => {\n    axios({\n      method: \"post\",\n      url: \"/api/post\",\n      data: postData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(() => {\n        this.props.closeForm();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div id=\"postform\">\n        <form className=\"event\" onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"msg\">\n              Message\n            </label>\n            <textarea\n              placeholder=\"message to community\"\n              type=\"text\"\n              rows=\"3\"\n              className=\"textarea\"\n              name=\"msg\"\n              value={this.state.msg}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"photo\">\n              Photo\n            </label>\n            <div className=\"control\">\n              {/* <span id=\"imageRemove\">X</span> */}\n              <input\n                className=\"input\"\n                name=\"photo\"\n                type=\"file\"\n                // value={this.state.photos}\n                onChange={this.fileChangeHandler}\n              />\n            </div>\n          </div>\n          <button\n            id=\"submitPost\"\n            className=\"button is-primary is-small\"\n            type=\"submit\"\n          >\n            Post!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\n\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n  }\n  componentDidMount() {\n    axios.get(\"/api/all\").then(data => {\n      console.log(data.data);\n      this.setState({ events: data.data });\n    });\n  }\n  displayMarkers = () =>\n    this.state.events.map((events, index) => (\n      <Marker\n        key={index}\n        id={index}\n        title={events.address}\n        position={{\n          lat: events.lat,\n          lng: events.lon\n        }}\n        onClick={() =>\n          alert(`Event: ${events.title} \nDescription: ${events.description}`)\n        }\n      />\n    ));\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={11}\n        initialCenter={{ lat: 33.753746, lng: -84.38633 }}\n      >\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.MAP_API\n})(MapContainer);\n\n// class Main extends React.Component {\n//   state = {\n//     isRegister: false\n//   };\n//   changeForm = () => {\n//     this.setState({ isRegister: !this.state.isRegister });\n//   };\n//   render() {\n//     const { isRegister } = this.state;\n//     return (\n//       <>\n//         <div class=\"container\">\n//           <div class=\"columns is-centered is-vcentered\">\n//             <div class=\"column is-narrow\">\n//               <h1>Hi, this is the main site</h1>\n\n//               <a href=\"/event\">Create a new post</a>\n//             </div>\n//           </div>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n","import React, { Component } from \"react\";\n// import eventPost from \"../utils/EventPost\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EventForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      address: \"\",\n      lat: \"\",\n      lon: \"\",\n      start: new Date(),\n      img: \"\",\n      creator: this.props.userState.id\n    };\n  }\n  componentDidMount() {\n    console.log(\"post form user\", this.props.userState);\n    console.log(\"creator state\", this.state.creator);\n  }\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleDateChange = date => {\n    this.setState({\n      start: date\n    });\n  };\n\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      img: file\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    if (this.state.title && this.state.description) {\n      axios\n        .get(\n          `https://api.opencagedata.com/geocode/v1/json?q=${this.state.address}&key=73b2bdf763ad428694bf092b08ad995d&language=es&pretty=1`\n        )\n        .then(data => {\n          console.log(data);\n          this.setState({\n            lat: data.data.results[0].geometry.lat,\n            lon: data.data.results[0].geometry.lng\n          });\n          console.log(this.state.lat);\n          console.log(this.state.lon);\n\n          let eventData = new FormData();\n          eventData.append(\"title\", this.state.title);\n          eventData.append(\"description\", this.state.description);\n          eventData.append(\"address\", this.state.address);\n          eventData.append(\"lat\", this.state.lat);\n          eventData.append(\"lon\", this.state.lon);\n          eventData.append(\"date.start\", this.state.start);\n          eventData.append(\"creator\", this.state.creator);\n          eventData.append(\"img\", this.state.img);\n\n          console.log(\"event data\", eventData);\n\n          axios\n            .post(\"/api/event\", eventData)\n            .then(() => {\n              this.props.closeForm();\n            })\n            .catch(err => console.log(err));\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n\n    // map stuff\n    axios.get(\"api/all\").then(function(data2) {\n      console.log(data2);\n    });\n  };\n\n  render() {\n    const { title, description, address } = this.state;\n    return (\n      <div id=\"eventForm\">\n        <form onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\">Name of event</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title of the event\"\n                value={title}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Address of event</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"address\"\n                placeholder=\"address\"\n                value={address}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <h1 className=\"label\">Date</h1>\n          <DatePicker\n            selected={this.state.start}\n            onChange={this.handleDateChange}\n          />\n\n          <div className=\"field\">\n            <label className=\"label\">Description of event</label>\n            <div className=\"control\">\n              <textarea\n                type=\"text\"\n                className=\"textarea\"\n                rows=\"3\"\n                name=\"description\"\n                placeholder=\"Description of the event\"\n                value={description}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"img\">\n              Photo\n            </label>\n            <div className=\"control\">\n              {/* <span id=\"imageRemove\">X</span> */}\n              <input\n                className=\"input\"\n                name=\"img\"\n                type=\"file\"\n                // value={this.state.photos}\n                onChange={this.fileChangeHandler}\n              />\n            </div>\n          </div>\n\n          <button\n            id=\"submitEvent\"\n            className=\"button is-primary is-small\"\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EventForm;\n","import React, { Component } from \"react\";\nimport \"./nav.scss\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav\n        className=\"navbar is-fixed-top\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"#\">\n            <h1 id=\"title\">UnKnowd</h1>\n          </a>\n          <a\n            role=\"button\"\n            href=\"#\"\n            className=\"navbar-burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            onClick={this.props.toggleNavbar}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        {this.props.user ? (\n          <div className=\"navbar-menu\">\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\" id=\"viewChanger\">\n                <a\n                  href=\"#\"\n                  className=\"button is-primary is-small\"\n                  id=\"viewChange\"\n                  onClick={this.props.togglePostEventViews}\n                >\n                  {this.props.eventShow ? \"View Posts\" : \"View Events\"}\n                </a>\n              </div>\n              <div className=\"navbar-item\" id=\"postMaker\">\n                <a\n                  href=\"#\"\n                  className=\"button is-primary is-small\"\n                  id=\"formButton\"\n                  onClick={this.props.togglePostForm}\n                >\n                  {this.props.postFormShow ? \"Close\" : \"Make a Post\"}\n                </a>\n              </div>\n              <div className=\"navbar-item\" id=\"eventMaker\">\n                <a\n                  href=\"#\"\n                  className=\"button is-primary is-small\"\n                  id=\"makeEvent\"\n                  onClick={this.props.toggleEventForm}\n                >\n                  {this.props.eventFormShow ? \"close\" : \"Make an Event\"}\n                </a>\n              </div>\n              <div className=\"navbar-item\" id=\"eventMaker\">\n                <a\n                  href=\"#\"\n                  className=\"button is-primary is-small\"\n                  id=\"makeEvent\"\n                  onClick={this.props.logout}\n                >\n                  Logout\n                </a>\n              </div>\n\n              <div className=\"navbar-item userNameDisplay\">\n                Welcome back {this.props.firstName}!\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </nav>\n    );\n  }\n}\nexport default Nav;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Post from \"../components/Post\";\nimport Event from \"../components/Event\";\nimport Postform from \"../components/PostForm\";\nimport authenticatedAxios from \"../utils/AuthenticatedAxios\";\nimport EventMap from \"../components/Map\";\nimport socketIOClient from \"socket.io-client\";\nimport EventForm from \"../components/EventForm\";\nimport Auth from \"../utils/Auth\";\nimport Nav from \"../components/Nav/Nav\";\n\nclass Mainpage extends React.Component {\n  state = {\n    posts: [],\n    events: [],\n    user: \"\",\n    eventShow: false,\n    postFormShow: false,\n    eventFormShow: false,\n    burgerActive: false\n  };\n\n  setUser = user => {\n    this.setState({ user });\n    // setTimeout(() => console.log(\"****STATE\", this.state), 100);\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios.get(\"/api/me\").then(response => {\n        // console.log(response);\n        this.setUser(response.data);\n        // console.log(this.state.user);\n      });\n    }\n\n    this.getPosts();\n    this.getEvents();\n    const socket = socketIOClient();\n    // socket.on(\"new post\", data => console.log(data));\n\n    socket.on(\"new post\", post => {\n      // console.log(post);\n      this.setState({\n        posts: [post, ...this.state.posts]\n      });\n    });\n\n    socket.on(\"new event\", event => {\n      // console.log(event);\n      this.setState({\n        events: [event, ...this.state.events]\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  getPosts = () => {\n    axios\n      .get(\"/api/posts\")\n      .then(res => {\n        // console.log(res);\n        this.setState({ posts: res.data });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getEvents = () => {\n    axios\n      .get(\"/api/events\")\n      .then(res => {\n        this.setState({ events: res.data });\n        // console.log(this.state.events);\n      })\n      .catch(err => console.log(err));\n  };\n\n  togglePostEventViews = () => {\n    this.setState({ eventShow: !this.state.eventShow });\n    this.setState({ burgerActive: false });\n    document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n  };\n\n  togglePostForm = () => {\n    this.setState({ postFormShow: !this.state.postFormShow });\n    this.setState({ burgerActive: false });\n    document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n  };\n\n  toggleEventForm = () => {\n    this.setState({ eventFormShow: !this.state.eventFormShow });\n    this.setState({ burgerActive: false });\n    document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n  };\n\n  toggleNavbar = () => {\n    this.setState({ burgerActive: !this.state.burgerActive });\n    if (this.state.burgerActive === false) {\n      document.querySelector(\".navbar-menu\").className += \" is-active\";\n    } else {\n      document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n    }\n  };\n\n  logout = () => {\n    Auth.logOut(() => (window.location = \"/\"));\n  };\n\n  render() {\n    return (\n      <div className=\"container main\">\n        <Nav\n          toggleNavbar={this.toggleNavbar}\n          togglePostEventViews={this.togglePostEventViews}\n          eventShow={this.state.eventShow}\n          togglePostForm={this.togglePostForm}\n          toggleEventForm={this.toggleEventForm}\n          logout={this.logout}\n          firstName={this.state.user.firstName}\n          user={this.state.user}\n        />\n\n        <div>\n          {this.state.postFormShow ? (\n            <Postform\n              userState={this.state.user}\n              closeForm={this.togglePostForm}\n            />\n          ) : null}\n\n          {this.state.eventFormShow ? (\n            <EventForm\n              userState={this.state.user}\n              closeForm={this.toggleEventForm}\n            />\n          ) : null}\n        </div>\n        <div className=\"columns\">\n          <div className=\"column posts\">\n            {!this.state.eventShow\n              ? this.state.posts.map(post => (\n                  <Post\n                    key={post._id}\n                    postData={post}\n                    userState={this.state.user}\n                    replyCount={post.replies.length}\n                  />\n                ))\n              : this.state.events.map(event => (\n                  <Event\n                    key={event._id}\n                    eventData={event}\n                    eventShow={this.state.eventShow}\n                    userState={this.state.user}\n                    replyCount={event.replies.length}\n                  />\n                ))}\n          </div>\n          <div className=\"column events\">\n            <EventMap />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Mainpage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Event from \"../components/Event\";\nimport EventMap from \"../components/Map\";\nimport socketIOClient from \"socket.io-client\";\nimport Nav from \"../components/Nav/Nav\";\n\nclass Viewer extends React.Component {\n  state = {\n    posts: [],\n    events: []\n  };\n\n  componentDidMount() {\n    this.getPosts();\n    this.getEvents();\n    const socket = socketIOClient();\n    // socket.on(\"new post\", data => console.log(data));\n\n    socket.on(\"new post\", post => {\n      console.log(post);\n      this.setState({\n        posts: [post, ...this.state.posts]\n      });\n    });\n\n    socket.on(\"new event\", event => {\n      console.log(event);\n      this.setState({\n        events: [event, ...this.state.events]\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.socket.close();\n  }\n\n  getPosts = () => {\n    axios\n      .get(\"/api/posts\")\n      .then(res => {\n        console.log(res);\n        this.setState({ posts: res.data });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getEvents = () => {\n    axios\n      .get(\"/api/events\")\n      .then(res => {\n        this.setState({ events: res.data });\n        console.log(this.state.events);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"container main\">\n        <Nav />\n        <div className=\"columns\">\n          <div className=\"column posts\">\n            {this.state.events.map(event => (\n              <Event key={event._id} eventData={event} />\n            ))}\n          </div>\n          <div className=\"column events\">\n            <EventMap />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Viewer;\n","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport authenticatedAxios from \"./utils/AuthenticatedAxios\";\nimport LoginPage from \"./pages/LoginPage\";\nimport UserContext from \"./context/UserContext\";\nimport Mainpage from \"./pages/Main\";\nimport Viewer from \"./pages/Viewer\";\nimport \"./app.scss\";\n\nclass App extends Component {\n  state = {\n    user: null\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios\n        .get(\"/api/me\")\n        .then(response => this.setUser(response.data));\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser;\n    return (\n      <Router>\n        <div>\n          <UserContext.Provider\n            value={{\n              user: user,\n              setUser: setUser\n            }}\n          >\n            <Route exact path=\"/\" component={LoginPage} />\n            <ProtectedRoute exact path=\"/mainpage\" component={Mainpage} />\n            {/* <Route exact path=\"/map\" component={EventMap} /> */}\n            {/* <Route exact path=\"/event\" component={EventForm} /> */}\n            <Route exact path=\"/viewer\" component={Viewer} />\n          </UserContext.Provider>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}