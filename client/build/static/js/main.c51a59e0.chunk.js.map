{"version":3,"sources":["utils/Auth.js","components/ProtectedRoute.js","utils/AuthenticatedAxios.js","context/UserContext.js","utils/ClearImageSelect.js","components/PhotoInput/PhotoInput.js","components/SignUpForm.js","components/LoginForm.js","pages/LoginPage.js","components/UserDisplay/UserDisplay.js","components/PostForms/PostReply.js","components/CommentDisplay/CommentDisplay.js","components/CommentingButtons/CommentingButtons.js","components/Post.js","components/Event.js","components/PostForms/PostForm.js","components/Map.js","components/PostForms/EventForm.js","components/Nav/Nav.js","pages/Main.js","pages/Viewer.js","pages/UpdateProfile/UpdateProfile.js","App.js","registerServiceWorker.js","index.js"],"names":["Auth","logIn","email","password","cb","axios","post","then","response","localStorage","setItem","data","token","catch","err","console","log","status","isLoggedIn","getItem","logOut","removeItem","getToken","register","userData","get","ProtectedRoute","Component","component","rest","render","props","to","create","headers","Authorization","createContext","clearImageSelect","imageStateName","document","querySelector","value","this","setState","fileChange","event","photoFileName","file","target","files","PhotoInput","className","id","type","name","fileName","onChange","fileChangeHandler","onClick","removeImage","SignUpForm","state","firstName","lastName","photo","changeHandler","e","emailChangeHandler","toLowerCase","submitHandler","preventDefault","FormData","set","context","setUser","history","push","window","location","bind","onSubmit","htmlFor","first","required","last","pattern","contextType","UserContext","withRouter","LoginForm","user","badlogin","resizeVh","bodyHeight","innerHeight","documentElement","style","setProperty","msg","addEventListener","LoginPage","isRegister","loggedIn","changeForm","authenticatedAxios","href","React","UserDisplay","backgroundImage","creatorPhoto","PostForm","creator","userState","dateCreated","photos","parrentComment","currentDate","Date","formPostData","append","eventShow","saveEvent","savePost","postData","method","url","closeForm","postId","placeholder","rows","CommentDisplay","componentDidMount","comments","_id","data-id","alt","src","CommentingButtons","marginRight","toggleReply","dataId","toggleComments","replyCount","Post","readComments","refreshComments","getComments","PostReply","replies","map","comment","key","Event","eventData","title","address","img","description","date","data-attr","start","MapContainer","displayMarkers","events","index","position","lat","lng","lon","alert","google","zoom","initialCenter","GoogleApiWrapper","apiKey","process","MAP_API","EventForm","handleDateChange","results","geometry","togglePostEventViews","error","selected","Nav","burgerActive","toggleNavbar","classList","remove","toggleConditional","pathname","role","aria-label","aria-expanded","aria-hidden","togglePostForm","postFormShow","toggleEventForm","eventFormShow","innerWidth","toggleMapMobile","logout","Mainpage","posts","mapShow","getPosts","res","resoponse","getEvents","postHeight","setAttribute","socket","io","on","length","Viewer","socketIOClient","UpdateProfile","info","currentPassword","updatingUser","newPassword","passwordCheck","updatedInfo","scrollTop","App","Provider","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","URL","origin","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c51a59e0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction Auth() {\n  function logIn(email, password, cb) {\n    //code goes here\n    axios\n      .post(\"/api/authenticate\", { email: email, password: password })\n      .then(response => {\n        localStorage.setItem(\"token\", response.data.token);\n        cb(response);\n      })\n      .catch(function(err) {\n        console.log(err.response);\n        if (err.response.status === 401) cb(err.response);\n      });\n  }\n\n  function register(userData, cb) {\n    console.log(\"start register\");\n    let email = userData.get(\"email\");\n    let password = userData.get(\"password\");\n    // console.log(\"login\", email, password);\n\n    axios\n      .post(\"/api/signup\", userData)\n      .then(function(data) {\n        logIn(email, password, cb);\n        console.log(data);\n      })\n      .catch(function(err) {\n        console.log(err.response);\n      });\n  }\n\n  function logOut(cb) {\n    localStorage.removeItem(\"token\");\n    cb();\n  }\n\n  function getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  function isLoggedIn() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    isLoggedIn,\n    logIn,\n    logOut,\n    getToken,\n    register\n  };\n}\n\nexport default Auth();\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../utils/Auth\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      Auth.isLoggedIn() ? <Component {...props} /> : <Redirect to=\"/\" />\n    }\n  />\n);\n\nexport default ProtectedRoute;\n","import axios from \"axios\";\n\nexport default axios.create({\n  headers: {\n    Authorization: localStorage.getItem(\"token\")\n  }\n});\n","import { createContext } from \"react\";\n\nexport default createContext();\n","function clearImageSelect(imageStateName) {\n  document.querySelector(\"#imageSelect\").value = \"\";\n  this.setState({\n    [imageStateName]: \"\"\n  });\n}\n\nfunction fileChange(event, photoFileName) {\n  var file = event.target.files[0];\n  // console.log(file);\n  this.setState({\n    [photoFileName]: file\n  });\n}\n\nexport { clearImageSelect, fileChange };\n","import React, { Component } from \"react\";\nimport \"./PhotoInput.scss\";\n\nclass PhotoInput extends Component {\n  render() {\n    return (\n      <div className=\"file has-name is-fullwidth is-primary\">\n        <label className=\"file-label\">\n          <input\n            id=\"imageSelect\"\n            className=\"file-input\"\n            type=\"file\"\n            name={this.props.fileName}\n            onChange={this.props.fileChangeHandler}\n          />\n          <span className=\"file-cta\">\n            <span className=\"file-label\">+ Photo</span>\n          </span>\n          <span className=\"file-name\">{this.props.photoFileName}</span>\n        </label>\n        <span id=\"imageRemove\" onClick={this.props.removeImage}>\n          x\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default PhotoInput;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\nimport { clearImageSelect } from \"../utils/ClearImageSelect\";\nimport PhotoInput from \"./PhotoInput/PhotoInput\";\n\nclass SignUpForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    photo: \"\"\n  };\n\n  componentDidMount() {\n    this.clearImageSelect = clearImageSelect.bind(this);\n  }\n\n  removeImage = () => this.clearImageSelect(\"photo\");\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  emailChangeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value.toLowerCase() });\n  };\n\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      photo: file\n    });\n  };\n  submitHandler = e => {\n    e.preventDefault();\n    this.setState({ email: this.state.email.toLowerCase() });\n    const { email, password, firstName, lastName } = this.state;\n\n    const userData = new FormData(document.querySelector(\"#newUserForm\"));\n    userData.set(\"email\", this.state.email.toLowerCase());\n\n    if (email && password && firstName && lastName) {\n      Auth.register(userData, response => {\n        this.context.setUser(response.data);\n        this.props.history.push(\"/\");\n        window.location = \"/mainpage\";\n      });\n\n      // Auth.register(email, password, firstName, lastName, photo, response => {\n      //   this.context.setUser(response);\n      //   this.props.history.push(\"/\");\n      // });\n    }\n  };\n\n  render() {\n    return (\n      <form id=\"newUserForm\" onSubmit={this.submitHandler}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"firstName\">\n            First Name\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"firstName\"\n              value={this.state.first}\n              onChange={this.changeHandler}\n              required\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"lastName\">\n            Last Name\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"lastName\"\n              value={this.state.last}\n              onChange={this.changeHandler}\n            />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"email\">\n            Email\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"email\"\n              value={this.state.email}\n              onChange={this.changeHandler}\n              required\n              pattern=\".+@.+\\..+\"\n            />\n          </div>\n        </div>\n        <PhotoInput\n          fileName=\"photo\"\n          fileChangeHandler={this.fileChangeHandler}\n          photoFileName={this.state.photo.name}\n          removeImage={this.removeImage}\n        />\n        {/* <div className=\"field\">\n          <label className=\"label\" htmlFor=\"photo\">\n            Photo\n          </label>\n          <div className=\"control\">\n            <span id=\"imageRemove\" onClick={this.removeImage}>\n              x\n            </span>\n            <input\n              id=\"imageSelect\"\n              className=\"input\"\n              name=\"photo\"\n              type=\"file\"\n              // value={this.state.photo}\n              onChange={this.fileChangeHandler}\n            />\n          </div>\n        </div> */}\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"password\">\n            Password (min of 8 characters)\n          </label>\n          <div className=\"contol\">\n            <input\n              className=\"input\"\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={this.changeHandler}\n              required\n              pattern=\".{8,}\"\n            />\n          </div>\n        </div>\n\n        <button\n          id=\"signupButton\"\n          className=\"button is-primary is-small\"\n          type=\"submit\"\n        >\n          Sign up\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(SignUpForm);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport UserContext from \"../context/UserContext\";\nimport Auth from \"../utils/Auth\";\n\nclass LoginForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    email: \"\",\n    password: \"\",\n    user: \"\",\n    badlogin: \"\"\n  };\n\n  componentDidMount() {\n    let bodyHeight = window.innerHeight;\n    this.resizeVh(bodyHeight);\n    window.addEventListener(\"resize\", this.resizeVh.bind(this));\n  }\n\n  resizeVh = bodyHeight => {\n    console.log(\"rezize\");\n    bodyHeight = window.innerHeight;\n    // bodyHeight = window.innerHeight;\n    document.documentElement.style.setProperty(\n      \"--bodyHeight\",\n      `${bodyHeight}px`\n    );\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  badlogin = msg => {\n    this.setState({ badlogin: msg });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    this.setState({ badlogin: \"\" });\n    const { email, password } = this.state;\n    if (email && password) {\n      Auth.logIn(email, password, response => {\n        if (response.status === 200) {\n          // console.log(\"submit\", response.data);\n          this.context.setUser(response.data);\n          this.props.history.push(\"/\");\n          // console.log(this.state.user);\n          window.location = \"/mainpage\";\n        }\n        if (response.status === 401) {\n          this.badlogin(response.data.msg);\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"email\">\n              Email\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"password\">\n              Password\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <button\n            id=\"loginButton\"\n            className=\"button is-primary is-small\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n        </form>\n        {!this.state.badlogin == \"\" ? (\n          <p className=\"badlogin\">{this.state.badlogin}</p>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SignUpForm from \"../components/SignUpForm\";\nimport LoginForm from \"../components/LoginForm\";\nimport authenticatedAxios from \"../utils/AuthenticatedAxios\";\n\nclass LoginPage extends React.Component {\n  state = {\n    isRegister: false,\n    loggedIn: false\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios.get(\"/api/me\").then(response => {\n        this.setUser(response.data);\n        if (response.data.id) this.setState({ loggedIn: true });\n        // console.log(this.state.user);\n      });\n    }\n  }\n\n  changeForm = () => {\n    this.setState({ isRegister: !this.state.isRegister });\n  };\n\n  render() {\n    const { isRegister } = this.state;\n    return (\n      <div id=\"wrap\">\n        {this.state.loggedIn ? <Redirect to=\"/mainpage\" /> : null}\n\n        <nav>\n          <h1 id=\"main-name\">UnKnowd</h1>\n        </nav>\n        <div className=\"loginBody\">\n          <h5 id=\"quote\">Putting community back in community</h5>\n          <div className=\"container\" id=\"signup-container\">\n            <div className=\"columns is-centered is-vcentered is-mobile\">\n              <div className=\"column is-narrow box\">\n                {isRegister ? <SignUpForm /> : <LoginForm />}\n                <a href=\"#\" className=\"\" id=\"login\" onClick={this.changeForm}>\n                  {isRegister\n                    ? \"Already have an account?\"\n                    : \"Sign up for an account\"}\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport \"./userDisplay.css\";\n\nclass UserDisplay extends Component {\n  render() {\n    return (\n      <>\n        <div\n          className=\"userphoto\"\n          style={{ backgroundImage: `url(${this.props.creatorPhoto})` }}\n        ></div>\n        <div className=\"username\">{this.props.firstName}</div>\n      </>\n    );\n  }\n}\n\nexport default UserDisplay;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { clearImageSelect, fileChange } from \"../../utils/ClearImageSelect\";\nimport PhotoInput from \"../PhotoInput/PhotoInput\";\nimport \"./styles.scss\";\n\nclass PostForm extends Component {\n  //settting compoent forms initial structure\n  state = {\n    msg: \"\",\n    creator: this.props.userState.id,\n    dateCreated: \"\",\n    photos: \"\",\n    parrentComment: \"\"\n  };\n\n  componentDidMount() {\n    this.setState({\n      parrentComment: this.props.postId\n    });\n    this.clearImageSelect = clearImageSelect.bind(this);\n    this.fileChange = fileChange.bind(this);\n  }\n  fileChangeHandler = event => this.fileChange(event, \"photo\");\n\n  removeImage = () => this.clearImageSelect(\"photos\");\n\n  //this gets the value and name of the inputs that triggered the change\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      photos: file\n    });\n  };\n\n  //want to prevent the default of form submit which is to just refresh the page\n  submitHandler = e => {\n    e.preventDefault();\n    // console.log(Auth.getToken());\n    let currentDate = new Date();\n\n    let formPostData = new FormData();\n    formPostData.set(\"creator\", this.state.creator);\n    formPostData.append(\"photos\", this.state.photos);\n    formPostData.append(\"msg\", this.state.msg);\n    formPostData.append(\"dateCreated\", currentDate);\n    formPostData.append(\"commentId\", this.state.parrentComment);\n\n    // console.log(\"form data for axios\");\n    // for (var [key, value] of formPostData.entries()) {\n    //   console.log(key, value);\n    // }\n    this.props.eventShow\n      ? this.saveEvent(formPostData)\n      : this.savePost(formPostData);\n  };\n\n  saveEvent = postData => {\n    console.log(\"save event reply\");\n\n    axios({\n      method: \"post\",\n      url: \"/api/replyEventComment\",\n      data: postData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(() => {\n        this.props.closeForm();\n        // this.props.refreshComments();\n      })\n      .catch(err => console.log(err));\n  };\n\n  savePost = postData => {\n    console.log(\"save post reply\");\n\n    axios({\n      method: \"post\",\n      url: \"/api/replyComment\",\n      data: postData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(() => {\n        // this.props.refreshComments();\n        this.props.closeForm();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div id=\"postform\">\n        <button className=\"button is-smaller\" onClick={this.props.closeForm}>\n          X\n        </button>\n        <form className=\"event\" onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"msg\">\n              Message\n            </label>\n            <textarea\n              placeholder=\"message to community\"\n              type=\"text\"\n              rows=\"3\"\n              className=\"textarea\"\n              name=\"msg\"\n              value={this.state.msg}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <PhotoInput\n            fileChangeHandler={this.fileChangeHandler}\n            removeImage={this.removeImage}\n            fileName=\"photos\"\n            photoFileName={this.state.photos.name}\n          />\n          <button\n            id=\"replyButton\"\n            className=\"button is-primary is-small\"\n            type=\"submit\"\n          >\n            Post!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React, { Component } from \"react\";\nimport UserDisplay from \"../UserDisplay/UserDisplay\";\nimport \"./commentDisplay.scss\";\nclass CommentDisplay extends Component {\n  componentDidMount = () => {\n    // setTimeout(() => console.log(\"display\", this.props.comments), 500);\n  };\n\n  render() {\n    const { _id, creator, photos, msg } = this.props.comments;\n    return (\n      <div className=\"post comments box clearfix\" data-id={_id}>\n        <UserDisplay\n          firstName={creator.firstName}\n          creatorPhoto={creator.photo}\n        />\n        {photos ? <img alt=\"\" className=\"postPhotos\" src={photos} /> : null}\n        <p className={!photos == \"\" ? \"clearRight description\" : \"description\"}>\n          {msg}\n        </p>\n      </div>\n    );\n  }\n}\nexport default CommentDisplay;\n","import React, { Component } from \"react\";\nimport Auth from \"../../utils/Auth\";\nimport \"./CommentingButtons.scss\";\nclass CommentingButtons extends Component {\n  state = {\n    loggedIn: false\n  };\n\n  componentDidMount() {\n    this.setState({\n      loggedIn: Auth.isLoggedIn()\n    });\n    // setTimeout(\n    //   () =>\n    //     this.setState({\n    //       replyCount: this.props.replyCount\n    //     }),\n    //   100\n    // );\n    // setTimeout(() => console.log(\"login State\", this.state.loggedIn), 500);\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.loggedIn ? (\n          <div className=\"commentingButtons\">\n            <button\n              className=\"button is-smaller\"\n              style={{ marginRight: \".5rem\" }}\n              onClick={this.props.toggleReply}\n            >\n              Reply\n            </button>\n            <button\n              className=\"button is-smaller\"\n              data-id={this.props.dataId}\n              onClick={this.props.toggleComments}\n            >\n              Comments\n              <div className=\"commentCount\">\n                <span> {this.props.replyCount} </span>\n              </div>\n            </button>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n}\n\nexport default CommentingButtons;\n","import React, { Component } from \"react\";\nimport UserDisplay from \"./UserDisplay/UserDisplay\";\nimport PostReply from \"./PostForms/PostReply\";\nimport CommentDisplay from \"./CommentDisplay/CommentDisplay\";\nimport CommentingButtons from \"./CommentingButtons/CommentingButtons\";\n\nclass Post extends Component {\n  state = {\n    readComments: false,\n    toggleReply: false,\n    user: \"\",\n    replyCount: \"\"\n  };\n\n  toggleComments = () => {\n    this.setState({ readComments: !this.state.readComments });\n  };\n\n  toggleReply = () => {\n    this.setState({ toggleReply: !this.state.toggleReply });\n  };\n\n  refreshComments = () => {\n    this.getComments();\n  };\n\n  render() {\n    return (\n      <div className=\"post box clearfix\" data-id={this.props.postData._id}>\n        <div>\n          <div className=\"clearfix\">\n            <div\n              className={\n                !this.props.postData.photos[0] == \"\" ? \"clearfix\" : null\n              }\n            >\n              <UserDisplay\n                firstName={this.props.postData.creator.firstName}\n                creatorPhoto={this.props.postData.creator.photo}\n              />\n              {!this.props.postData.photos[0] == \"\" ? (\n                <div className=\"postPhotos\">\n                  <img alt=\"\" src={this.props.postData.photos} />\n                </div>\n              ) : null}\n            </div>\n            <p>{this.props.postData.msg}</p>\n          </div>\n          <CommentingButtons\n            dataId={this.props.postData._id}\n            toggleComments={this.toggleComments}\n            toggleReply={this.toggleReply}\n            replyCount={this.props.replyCount}\n          />\n        </div>\n        {this.state.toggleReply ? (\n          <PostReply\n            userState={this.props.userState}\n            postId={this.props.postData._id}\n            closeForm={this.toggleReply}\n            refreshComments={this.refreshComments}\n          />\n        ) : null}\n        {this.state.readComments\n          ? this.props.postData.replies.map(comment => (\n              <CommentDisplay key={comment.dateCreated} comments={comment} />\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport UserDisplay from \"./UserDisplay/UserDisplay\";\nimport PostReply from \"./PostForms/PostReply\";\nimport CommentDisplay from \"./CommentDisplay/CommentDisplay\";\nimport CommentingButtons from \"./CommentingButtons/CommentingButtons\";\n\nclass Event extends Component {\n  state = {\n    readComments: false,\n    toggleReply: false,\n    user: \"\",\n    replyCount: \"\"\n  };\n\n  toggleComments = () => {\n    this.setState({ readComments: !this.state.readComments });\n  };\n\n  toggleReply = () => {\n    this.setState({ toggleReply: !this.state.toggleReply });\n  };\n\n  render() {\n    const {\n      title,\n      address,\n      img,\n      description,\n      date,\n      creator,\n      _id,\n      replies\n    } = this.props.eventData;\n    return (\n      <div className=\"event box clearfix\" data-attr={_id}>\n        <div>\n          <h2>{title}</h2>\n          <p>{address}</p>\n          <UserDisplay\n            firstName={creator.firstName}\n            creatorPhoto={creator.photo}\n          />\n          {img ? (\n            <div className=\"postPhotos\">\n              <img src={img} alt=\"\" />\n            </div>\n          ) : null}\n          <p className={!img == \"\" ? \"clearRight description\" : \"description\"}>\n            {description}\n          </p>\n          <span className=\"dates\">{date.start}</span>\n          <CommentingButtons\n            dataId={_id}\n            toggleComments={this.toggleComments}\n            toggleReply={this.toggleReply}\n            replyCount={this.props.replyCount}\n          />\n        </div>\n        {this.state.toggleReply ? (\n          <PostReply\n            userState={this.props.userState}\n            postId={_id}\n            closeForm={this.toggleReply}\n            eventShow={this.props.eventShow}\n            // refreshComments={this.refreshComments}\n          />\n        ) : null}\n        {this.state.readComments\n          ? replies.map(comment => (\n              <CommentDisplay key={comment.dateCreated} comments={comment} />\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { clearImageSelect, fileChange } from \"../../utils/ClearImageSelect\";\nimport PhotoInput from \"../PhotoInput/PhotoInput\";\nimport \"./styles.scss\";\n\nclass PostForm extends Component {\n  //settting compoent forms initial structure\n  state = {\n    msg: \"\",\n    creator: this.props.userState.id,\n    dateCreated: \"\",\n    photos: \"\"\n  };\n\n  componentDidMount() {\n    this.clearImageSelect = clearImageSelect.bind(this);\n    this.fileChange = fileChange.bind(this);\n  }\n  // socket = socketIOClient();\n  fileChangeHandler = event => this.fileChange(event, \"photo\");\n\n  removeImage = () => {\n    this.clearImageSelect(\"photos\");\n  };\n\n  //this gets the value and name of the inputs that triggered the changes\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  //specifically handles file selection changes\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      photos: file\n    });\n  };\n\n  //want to prevent the default of form submit which is to just refresh the page\n  submitHandler = e => {\n    e.preventDefault();\n    // console.log(Auth.getToken());\n    let currentDate = new Date();\n\n    let formPostData = new FormData();\n    formPostData.set(\"creator\", this.state.creator);\n    formPostData.append(\"photos\", this.state.photos);\n    formPostData.append(\"msg\", this.state.msg);\n    formPostData.append(\"dateCreated\", currentDate);\n\n    // console.log(\"form data for axios\");\n    // for (var [key, value] of formPostData.entries()) {\n    //   console.log(key, value);\n    // }\n\n    this.savePost(formPostData);\n  };\n\n  savePost = postData => {\n    axios({\n      method: \"post\",\n      url: \"/api/post\",\n      data: postData,\n      headers: { \"Content-Type\": \"multipart/form-data\" }\n    })\n      .then(() => {\n        this.props.closeForm();\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div id=\"postform\">\n        <button className=\"button is-smaller\" onClick={this.props.closeForm}>\n          X\n        </button>\n        <form className=\"event\" onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"msg\">\n              Message\n            </label>\n            <textarea\n              placeholder=\"message to community\"\n              type=\"text\"\n              rows=\"3\"\n              className=\"textarea\"\n              name=\"msg\"\n              value={this.state.msg}\n              onChange={this.changeHandler}\n            />\n          </div>\n          <PhotoInput\n            fileChangeHandler={this.fileChangeHandler}\n            removeImage={this.removeImage}\n            fileName=\"photos\"\n            photoFileName={this.state.photos.name}\n          />\n          <button\n            id=\"submitPost\"\n            className=\"button newPost is-small\"\n            type=\"submit\"\n          >\n            Post!\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostForm;\n","import React, { Component } from \"react\";\n// import { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\n\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n\nclass MapContainer extends Component {\n  displayMarkers = () =>\n    this.props.events.map((events, index) => (\n      <Marker\n        key={index}\n        id={index}\n        title={events.address}\n        position={{\n          lat: events.lat,\n          lng: events.lon\n        }}\n        onClick={() =>\n          alert(`Event: ${events.title} \nAddress:${events.address}\nDescription: ${events.description}`)\n        }\n      />\n    ));\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={11}\n        initialCenter={{ lat: 33.753746, lng: -84.38633 }}\n      >\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.MAP_API\n})(MapContainer);\n","import React, { Component } from \"react\";\n// import eventPost from \"../utils/EventPost\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { clearImageSelect, fileChange } from \"../../utils/ClearImageSelect\";\nimport PhotoInput from \"../PhotoInput/PhotoInput\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./styles.scss\";\n\nclass EventForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      address: \"\",\n      lat: \"\",\n      lon: \"\",\n      start: new Date(),\n      img: \"\",\n      creator: this.props.userState.id\n    };\n  }\n  componentDidMount() {\n    this.clearImageSelect = clearImageSelect.bind(this);\n    this.fileChange = fileChange.bind(this);\n  }\n  fileChangeHandler = event => this.fileChange(event, \"photo\");\n\n  removeImage = () => {\n    this.clearImageSelect(\"img\");\n  };\n\n  changeHandler = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleDateChange = date => {\n    this.setState({\n      start: date\n    });\n  };\n\n  fileChangeHandler = event => {\n    var file = event.target.files[0];\n    // console.log(file);\n    this.setState({\n      img: file\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    if (this.state.title && this.state.description) {\n      axios\n        .get(\n          `https://api.opencagedata.com/geocode/v1/json?q=${this.state.address}&key=73b2bdf763ad428694bf092b08ad995d&language=es&pretty=1`\n        )\n        .then(data => {\n          // console.log(data);\n          this.setState({\n            lat: data.data.results[0].geometry.lat,\n            lon: data.data.results[0].geometry.lng\n          });\n          // console.log(this.state.lat);\n          // console.log(this.state.lon);\n\n          let eventData = new FormData();\n          eventData.append(\"title\", this.state.title);\n          eventData.append(\"description\", this.state.description);\n          eventData.append(\"address\", this.state.address);\n          eventData.append(\"lat\", this.state.lat);\n          eventData.append(\"lon\", this.state.lon);\n          eventData.append(\"date.start\", this.state.start);\n          eventData.append(\"creator\", this.state.creator);\n          eventData.append(\"img\", this.state.img);\n\n          axios\n            .post(\"/api/event\", eventData)\n            .then(() => {\n              if (!this.props.eventShow) this.props.togglePostEventViews();\n              this.props.closeForm();\n            })\n            .catch(err => console.log(err.response));\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  };\n\n  render() {\n    const { title, description, address } = this.state;\n    return (\n      <div id=\"eventForm\">\n        <button className=\"button is-smaller\" onClick={this.props.closeForm}>\n          X\n        </button>\n        <form onSubmit={this.submitHandler}>\n          <div className=\"field\">\n            <label className=\"label\">Name of event</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title of the event\"\n                value={title}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Address of event</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"address\"\n                placeholder=\"address\"\n                value={address}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <h1 className=\"label\">Date</h1>\n          <DatePicker\n            selected={this.state.start}\n            onChange={this.handleDateChange}\n            className=\"input\"\n          />\n\n          <div className=\"field\">\n            <label className=\"label\">Description of event</label>\n            <div className=\"control\">\n              <textarea\n                type=\"text\"\n                className=\"textarea\"\n                rows=\"3\"\n                name=\"description\"\n                placeholder=\"Description of the event\"\n                value={description}\n                onChange={this.changeHandler}\n              />\n            </div>\n          </div>\n          <PhotoInput\n            fileChangeHandler={this.fileChangeHandler}\n            removeImage={this.removeImage}\n            fileName=\"img\"\n            photoFileName={this.state.img.name}\n          />\n          <button\n            id=\"submitEvent\"\n            className=\"button newPost is-small\"\n            type=\"submit\"\n          >\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EventForm;\n","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport UserDisplay from \"../UserDisplay/UserDisplay\";\nimport UserContext from \"../../context/UserContext\";\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\nimport \"./nav.scss\";\n\n//this.context accesses the conextType (UserContext) referenced bottom\nclass Nav extends Component {\n  state = {\n    burgerActive: false\n  };\n\n  toggleNavbar = () => {\n    this.setState({ burgerActive: !this.state.burgerActive });\n    if (this.state.burgerActive === false) {\n      document.querySelector(\".navbar-menu\").className += \" is-active\";\n    } else {\n      document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n    }\n  };\n\n  toggleConditional = () => {\n    if (window.location.pathname === \"/mainpage\") {\n      this.props.toggleNavbar();\n    }\n    if (window.location.pathname === \"/profile\") {\n      this.toggleNavbar();\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <nav\n          className=\"navbar is-fixed-top\"\n          role=\"navigation\"\n          aria-label=\"main navigation\"\n        >\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\" href=\"/mainpage\">\n              <h1 id=\"title\">UnKnowd</h1>\n            </a>\n            <a\n              role=\"button\"\n              href=\"#\"\n              className=\"navbar-burger\"\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              onClick={this.toggleConditional}\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n          {/* if logged in render navigation */}\n          {this.context.user ? (\n            <div className=\"navbar-menu\">\n              <div className=\"navbar-end\">\n                {/* render if on main page only */}\n                {window.location.pathname === \"/mainpage\" ? (\n                  <>\n                    <div className=\"navbar-item\" id=\"viewChanger\">\n                      <a\n                        href=\"#\"\n                        className=\"button is-small\"\n                        id=\"viewChange\"\n                        onClick={this.props.togglePostEventViews}\n                      >\n                        {this.props.eventShow ? \"Posts\" : \"Events\"}\n                      </a>\n                    </div>\n                    <div className=\"navbar-item\" id=\"postMaker\">\n                      <a\n                        href=\"#\"\n                        className=\"button is-small\"\n                        id=\"formButton\"\n                        onClick={this.props.togglePostForm}\n                      >\n                        {this.props.postFormShow ? (\n                          \"Close\"\n                        ) : (\n                          <>\n                            +<br />\n                            Post\n                          </>\n                        )}\n                      </a>\n                    </div>\n                    <div className=\"navbar-item\" id=\"eventMaker\">\n                      <a\n                        href=\"#\"\n                        className=\"button is-small\"\n                        id=\"makeEvent\"\n                        onClick={this.props.toggleEventForm}\n                      >\n                        {this.props.eventFormShow ? (\n                          \"close\"\n                        ) : (\n                          <>\n                            +<br />\n                            Event\n                          </>\n                        )}\n                      </a>\n                    </div>\n                    {/* render if mobile */}\n                    {window.innerWidth <= 768 ? (\n                      <div className=\"navbar-item\" id=\"mapHide\">\n                        <a\n                          href=\"#\"\n                          className=\"button is-small\"\n                          onClick={this.props.toggleMapMobile}\n                        >\n                          Hide\n                          <br />\n                          Map\n                        </a>\n                      </div>\n                    ) : null}\n                  </>\n                ) : null}\n                {/* always render if logged in */}\n                <div className=\"navbar-item\" id=\"eventMaker\">\n                  <a\n                    href=\"#\"\n                    className=\"button is-small\"\n                    id=\"makeEvent\"\n                    onClick={this.props.logout}\n                  >\n                    Logout\n                  </a>\n                </div>\n\n                <div className=\"navbar-item userNameDisplay\">\n                  Welcome back\n                  {/* <Link to={{ pathname: \"/\", state: { user } }}>\n                  {this.props.firstName}!\n                </Link> */}\n                  <Link to=\"/profile\">\n                    {this.context.user.photo ? (\n                      <UserDisplay creatorPhoto={this.context.user.photo} />\n                    ) : (\n                      <span className=\"navUserName\">\n                        {this.context.user.firstName}\n                      </span>\n                    )}\n                  </Link>\n                </div>\n              </div>\n            </div>\n          ) : null}\n        </nav>\n      </>\n    );\n  }\n}\nNav.contextType = UserContext;\nexport default Nav;\n","import React from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"../context/UserContext\";\nimport Post from \"../components/Post\";\nimport Event from \"../components/Event\";\nimport Postform from \"../components/PostForms/PostForm\";\nimport authenticatedAxios from \"../utils/AuthenticatedAxios\";\nimport EventMap from \"../components/Map\";\nimport io from \"socket.io-client\";\nimport EventForm from \"../components/PostForms/EventForm\";\nimport Auth from \"../utils/Auth\";\nimport Nav from \"../components/Nav/Nav\";\n\nclass Mainpage extends React.Component {\n  state = {\n    posts: [],\n    events: [],\n    user: \"\",\n    eventShow: false,\n    postFormShow: false,\n    eventFormShow: false,\n    burgerActive: false,\n    mapShow: true,\n    comment: false\n  };\n\n  setUser = user => {\n    this.setState({ user });\n    // setTimeout(() => console.log(\"****STATE\", this.state), 100);\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios.get(\"/api/me\").then(response => {\n        // console.log(response);\n        this.setUser(response.data);\n        // console.log(this.state.user);\n      });\n    }\n\n    let bodyHeight = window.innerHeight;\n    this.resizeVh(bodyHeight);\n    window.addEventListener(\"resize\", this.resizeVh.bind(this));\n\n    this.getPosts();\n    this.getEvents();\n    const socket = io();\n    // socket.on(\"new post\", data => console.log(data));\n\n    socket.on(\"new post\", post => {\n      // console.log(post);\n      this.setState({\n        posts: [post, ...this.state.posts]\n      });\n    });\n\n    socket.on(\"new event\", event => {\n      // console.log(event);\n      this.setState({\n        events: [event, ...this.state.events]\n      });\n    });\n\n    socket.on(\"new comment\", comment => {\n      if (comment.post) {\n        // console.log(\"post comment\", comment);\n        // this.setState({ comment: !this.state.comment });\n        this.getPosts();\n      }\n      if (comment.event) {\n        // console.log(\"evemt comment\", comment);\n        // this.setState({ comment: !this.state.comment });\n        this.getEvents();\n      }\n      console.log(\"done\");\n    });\n  }\n\n  resizeVh = bodyHeight => {\n    console.log(\"rezize\");\n    bodyHeight = window.innerHeight;\n    // bodyHeight = window.innerHeight;\n    document.documentElement.style.setProperty(\n      \"--bodyHeight\",\n      `${bodyHeight}px`\n    );\n  };\n\n  // componentWillUnmount() {\n  //   this.socket.close();\n  // }\n\n  getPosts = () => {\n    axios\n      .get(\"/api/posts\")\n      .then(res => {\n        // console.log(res);\n        this.setState({ posts: res.data });\n      })\n      .catch(err => console.log(err.resoponse));\n  };\n\n  getEvents = () => {\n    axios\n      .get(\"/api/events\")\n      .then(res => {\n        this.setState({ events: res.data });\n        // console.log(this.state.events);\n      })\n      .catch(err => console.log(err.resoponse));\n  };\n\n  togglePostEventViews = () => {\n    this.setState({ eventShow: !this.state.eventShow, burgerActive: false });\n    document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n  };\n\n  togglePostForm = () => {\n    this.setState({\n      postFormShow: !this.state.postFormShow,\n      eventFormShow: false,\n      burgerActive: false\n    });\n    document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n  };\n\n  toggleEventForm = () => {\n    this.setState({\n      eventFormShow: !this.state.eventFormShow,\n      postFormShow: false,\n      burgerActive: false\n    });\n    document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n  };\n\n  toggleNavbar = () => {\n    if (this.state.burgerActive === false) {\n      document.querySelector(\".navbar-menu\").className += \" is-active\";\n    } else {\n      document.querySelector(\".navbar-menu\").classList.remove(\"is-active\");\n    }\n    this.setState({ burgerActive: !this.state.burgerActive });\n  };\n\n  toggleMapMobile = () => {\n    let postHeight = window.innerHeight + \"px\";\n    if (window.innerWidth < 769 && this.state.mapShow === true) {\n      document\n        .querySelector(\".column.posts\")\n        .setAttribute(\"style\", `height:calc(${postHeight} - 4rem)`);\n    } else {\n      document\n        .querySelector(\".column.posts\")\n        .setAttribute(\"style\", `height:calc(${postHeight} * .6 - 5rem)`);\n    }\n    this.setState({ mapShow: !this.state.mapShow });\n    this.toggleNavbar();\n  };\n\n  logout = () => {\n    Auth.logOut(() => (window.location = \"/\"));\n  };\n\n  render() {\n    return (\n      <div className=\"container main\">\n        <Nav\n          togglePostEventViews={this.togglePostEventViews}\n          eventShow={this.state.eventShow}\n          togglePostForm={this.togglePostForm}\n          toggleEventForm={this.toggleEventForm}\n          logout={this.logout}\n          // firstName={this.state.user.firstName}\n          // user={this.state.user}\n          postFormShow={this.state.postFormShow}\n          eventFormShow={this.state.eventFormShow}\n          toggleNavbar={this.toggleNavbar}\n          toggleMapMobile={this.toggleMapMobile}\n        />\n\n        <div>\n          {this.state.postFormShow ? (\n            <Postform\n              userState={this.state.user}\n              closeForm={this.togglePostForm}\n            />\n          ) : null}\n\n          {this.state.eventFormShow ? (\n            <EventForm\n              userState={this.state.user}\n              closeForm={this.toggleEventForm}\n              eventShow={this.state.eventShow}\n              togglePostEventViews={this.togglePostEventViews}\n            />\n          ) : null}\n        </div>\n        <div className=\"columns\">\n          <div className=\"column posts\">\n            {!this.state.eventShow\n              ? this.state.posts.map(post => (\n                  <Post\n                    key={post._id}\n                    postData={post}\n                    userState={this.state.user}\n                    replyCount={post.replies.length}\n                  />\n                ))\n              : this.state.events.map(event => (\n                  <Event\n                    key={event._id}\n                    eventData={event}\n                    eventShow={this.state.eventShow}\n                    userState={this.context.user}\n                    replyCount={event.replies.length}\n                  />\n                ))}\n          </div>\n          {window.innerWidth <= 768 && !this.state.mapShow ? null : (\n            <div className=\"column events\">\n              <EventMap events={this.state.events} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nMainpage.contextType = UserContext;\nexport default Mainpage;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Event from \"../components/Event\";\nimport EventMap from \"../components/Map\";\nimport socketIOClient from \"socket.io-client\";\nimport Nav from \"../components/Nav/Nav\";\n\nclass Viewer extends React.Component {\n  state = {\n    posts: [],\n    events: []\n  };\n\n  componentDidMount() {\n    let bodyHeight = window.innerHeight;\n    this.resizeVh(bodyHeight);\n    window.addEventListener(\"resize\", this.resizeVh.bind(this));\n\n    this.getPosts();\n    this.getEvents();\n    const socket = socketIOClient();\n    // socket.on(\"new post\", data => console.log(data));\n\n    socket.on(\"new post\", post => {\n      console.log(post);\n      this.setState({\n        posts: [post, ...this.state.posts]\n      });\n    });\n\n    socket.on(\"new event\", event => {\n      console.log(event);\n      this.setState({\n        events: [event, ...this.state.events]\n      });\n    });\n  }\n\n  resizeVh = bodyHeight => {\n    console.log(\"rezize\");\n    bodyHeight = window.innerHeight;\n    // bodyHeight = window.innerHeight;\n    document.documentElement.style.setProperty(\n      \"--bodyHeight\",\n      `${bodyHeight}px`\n    );\n  };\n\n  // componentWillUnmount() {\n  //   this.socket.close();\n  // }\n\n  getPosts = () => {\n    axios\n      .get(\"/api/posts\")\n      .then(res => {\n        console.log(res);\n        this.setState({ posts: res.data });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getEvents = () => {\n    axios\n      .get(\"/api/events\")\n      .then(res => {\n        this.setState({ events: res.data });\n        console.log(this.state.events);\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"container main\">\n        <Nav />\n        <div className=\"columns\">\n          <div className=\"column posts\">\n            {this.state.events.map(event => (\n              <Event key={event._id} eventData={event} />\n            ))}\n          </div>\n          <div className=\"column events\">\n            <EventMap events={this.state.events} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Viewer;\n","import React, { Component } from \"react\";\nimport Nav from \"../../components/Nav/Nav\";\nimport authenticatedAxios from \"../../utils/AuthenticatedAxios\";\nimport UserDisplay from \"../../components/UserDisplay/UserDisplay\";\nimport Auth from \"../../utils/Auth\";\nimport { clearImageSelect, fileChange } from \"../../utils/ClearImageSelect\";\nimport PhotoInput from \"../../components/PhotoInput/PhotoInput\";\nimport \"./UpdateProfile.scss\";\n// import Auth from \"../utils/Auth\";\n\nclass UpdateProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      photo: \"\",\n      info: \"\",\n      user: \"\",\n      currentPassword: \"\",\n      newPassword: \"\",\n      passwordCheck: \"\"\n    };\n  }\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  componentDidMount() {\n    let bodyHeight = window.innerHeight;\n    this.resizeVh(bodyHeight);\n    window.addEventListener(\"resize\", this.resizeVh.bind(this));\n\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios.get(\"/api/me\").then(response => {\n        // console.log(response);\n        this.setState({ user: response.data });\n        // console.log(this.state.user);\n      });\n    }\n\n    // console.log(\"post form user\", this.props.userState);\n    // console.log(\"creator state\", this.state.creator);\n    authenticatedAxios\n      .get(\"/api/userInfo\", this.state.user.id)\n      .then(response => {\n        // console.log(response);\n        this.setState({ info: response.data });\n        // console.log(this.state.info);\n      })\n      .catch(function(error) {\n        console.log(error.response);\n      });\n\n    this.clearImageSelect = clearImageSelect.bind(this);\n    this.fileChange = fileChange.bind(this);\n  }\n\n  resizeVh = bodyHeight => {\n    console.log(\"rezize\");\n    bodyHeight = window.innerHeight;\n    // bodyHeight = window.innerHeight;\n    document.documentElement.style.setProperty(\n      \"--bodyHeight\",\n      `${bodyHeight}px`\n    );\n  };\n\n  fileChangeHandler = event => this.fileChange(event, \"photo\");\n\n  removeImage = () => {\n    this.clearImageSelect(\"photo\");\n  };\n\n  changeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  // fileChangeHandler = event => {\n  //   var file = event.target.files[0];\n  //   // console.log(file);\n  //   this.setState({\n  //     photo: file\n  //   });\n  // };\n\n  logout = () => {\n    Auth.logOut(() => (window.location = \"/\"));\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n\n    //build data set to update\n\n    Auth.logIn(this.state.info.email, this.state.currentPassword, response => {\n      console.log(response.status);\n\n      if (response.status === 200) {\n        console.log(\"initial auth ok\");\n\n        let updatingUser = new FormData();\n        if (this.state.email) updatingUser.append(\"email\", this.state.email);\n        if (this.state.firstName)\n          updatingUser.append(\"firstName\", this.state.firstName);\n        if (this.state.lastName)\n          updatingUser.append(\"lastName\", this.state.lastName);\n        if (this.state.photo) updatingUser.append(\"photo\", this.state.photo);\n        updatingUser.append(\"id\", this.state.user.id);\n        if (\n          this.state.newPassword === this.state.passwordCheck &&\n          this.state.newPassword != \"\"\n        )\n          updatingUser.append(\"password\", this.state.newPassword);\n\n        //authenticated posting of user updates\n        authenticatedAxios\n          .post(\"/api/userInfoUpdate\", updatingUser)\n          .then(updatedInfo => {\n            console.log(updatedInfo.data);\n            this.setState({ info: updatedInfo.data });\n            this.setState({\n              email: \"\",\n              firstName: \"\",\n              lastName: \"\",\n              photo: \"\",\n              currentPassword: \"\",\n              newPassword: \"\",\n              passwordCheck: \"\"\n            });\n          })\n          .catch(function(err) {\n            console.log(err.response);\n          });\n      } else if (response.status === 401) {\n        console.log(\"bad password\");\n      }\n      document.querySelector(\"#profile.container .column\").scrollTop = 0;\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Nav logout={this.logout} />\n        <div id=\"profile\" className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"box\">\n                <h2>Current Info:</h2>\n                <UserDisplay creatorPhoto={this.state.info.photo} />\n                <table>\n                  <tbody>\n                    <tr>\n                      <td>First Name:</td>\n                      <td>{this.state.info.firstName}</td>\n                    </tr>\n                    <tr>\n                      <td>Last Name:</td>\n                      <td>{this.state.info.lastName}</td>\n                    </tr>\n                    <tr>\n                      <td>Email:</td>\n                      <td>{this.state.info.email}</td>\n                    </tr>\n                  </tbody>\n                </table>\n                {/* <p>First Name: {this.state.info.firstName}</p>\n                <p>Last Name: {this.state.info.lastName}</p>\n                <p>Email: {this.state.info.email}</p> */}\n              </div>\n              <form\n                id=\"updateUserForm\"\n                className=\"box\"\n                onSubmit={this.submitHandler}\n              >\n                <h2>Update your info:</h2>\n                <br />\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"firstName\">\n                    First Name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      name=\"firstName\"\n                      value={this.state.firstName}\n                      onChange={this.changeHandler}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"lastName\">\n                    Last Name\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      name=\"lastName\"\n                      value={this.state.lastName}\n                      onChange={this.changeHandler}\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"email\">\n                    Email\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      name=\"email\"\n                      value={this.state.email}\n                      onChange={this.changeHandler}\n                    />\n                  </div>\n                </div>\n                <PhotoInput\n                  fileChangeHandler={this.fileChangeHandler}\n                  removeImage={this.removeImage}\n                  fileName=\"photo\"\n                  photoFileName={this.state.photo.name}\n                />\n                {/* <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"photo\">\n                    Photo\n                  </label>\n                  <div className=\"control\">\n                    <span id=\"imageRemove\" onClick={this.removeImage}>\n                      x\n                    </span>\n                    <input\n                      id=\"imageSelect\"\n                      // id=\"userPhoto\"\n                      className=\"input\"\n                      name=\"photo\"\n                      type=\"file\"\n                      // value={this.state.photo}\n                      onChange={this.fileChangeHandler}\n                    />\n                  </div>\n                </div> */}\n\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"newPassword\">\n                    New Password\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      name=\"newPassword\"\n                      value={this.state.newPassword}\n                      onChange={this.changeHandler}\n                      pattern=\".{8,}\"\n                      placeholder=\"min 8 chars\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"passwordCheck\">\n                    New Password Again\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      name=\"passwordCheck\"\n                      value={this.state.passwordCheck}\n                      onChange={this.changeHandler}\n                      pattern=\".{8,}\"\n                      placeholder=\"min 8 chars\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label className=\"label\" htmlFor=\"currentPassword\">\n                    Current Password\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      name=\"currentPassword\"\n                      value={this.state.currentPassword}\n                      onChange={this.changeHandler}\n                      required\n                      pattern=\".{8,}\"\n                      placeholder=\"min 8 chars\"\n                    />\n                  </div>\n                </div>\n\n                <button\n                  id=\"updateInfo\"\n                  className=\"button is-primary is-small\"\n                  type=\"submit\"\n                >\n                  Update\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UpdateProfile;\n","import React, { Component } from \"react\";\n// import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport authenticatedAxios from \"./utils/AuthenticatedAxios\";\nimport LoginPage from \"./pages/LoginPage\";\nimport UserContext from \"./context/UserContext\";\nimport Mainpage from \"./pages/Main\";\nimport Viewer from \"./pages/Viewer\";\nimport UpdateProfile from \"./pages/UpdateProfile/UpdateProfile\";\nimport \"./app.scss\";\n\nclass App extends Component {\n  state = {\n    user: null\n  };\n\n  setUser = user => {\n    this.setState({ user });\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      authenticatedAxios\n        .get(\"/api/me\")\n        .then(response => this.setUser(response.data));\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    const setUser = this.setUser;\n    return (\n      <Router>\n        <div>\n          <UserContext.Provider\n            value={{\n              user: user,\n              setUser: setUser\n            }}\n          >\n            <Switch>\n              <ProtectedRoute exact path=\"/mainpage\" component={Mainpage} />\n              {/* <Route exact path=\"/map\" component={EventMap} /> */}\n              {/* <Route exact path=\"/event\" component={EventForm} /> */}\n              <Route exact path=\"/viewer\" component={Viewer} />\n              <ProtectedRoute exact path=\"/profile\" component={UpdateProfile} />\n              <Route path=\"/\" user={this.state.user} component={LoginPage} />\n            </Switch>\n          </UserContext.Provider>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}